name: Update Bot on server

on:
  push:
    branches:
      - main

jobs:
  update-and-rerun:
    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Check if bot directory exists
      id: check-directory
      run: ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '[ -d ~/itsm2vk_bot/itsm2vk_bot ]'

    - name: Update Bot
      if: steps.check-directory.outcome == 'success'
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          cd ~/itsm2vk_bot/itsm2vk_bot && 
          git pull && 
          make build
        '

    - name: Initial Deployment
      if: steps.check-directory.outcome == 'failure'
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          mkdir ~/itsm2vk_bot &&
          git clone https://github.com/${{ github.repository }} ~/itsm2vk_bot &&
          cd ~/itsm2vk_bot/itsm2vk_bot &&
          make build
        '

    - name: Generate .env file
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          echo "Generating .env file..." &&
          cd ~/itsm2vk_bot/itsm2vk_bot &&
          rm -f .env &&
          touch .env &&
          for var in ${{ toJson(vars) }} ${{ toJson(secrets) }}; do
            if [[ $var == BOT_* ]]; then
              # Удаляем префикс BOT_
              env_var_name=${var#BOT_}
              echo "$env_var_name=${{ vars[var] }}" >> .env
            fi
          done
        '

    - name: Run bot
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          cd ~/itsm2vk_bot/itsm2vk_bot &&
          make hard_restart
        '
