name: (Re)deploy bot on server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-and-rerun:

    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Check if bot directory exists
      id: check-directory
      run: ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '[ -d ~/itsm2vk_bot/itsm2vk_bot ]'

    - name: Update Bot
      if: steps.check-directory.outcome == 'success'
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          cd ~/itsm2vk_bot/itsm2vk_bot && 
          git pull && 
          make build
        '

    - name: Initial Deployment
      if: steps.check-directory.outcome == 'failure'
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          mkdir ~/itsm2vk_bot &&
          git clone https://github.com/${{ github.repository }} ~/itsm2vk_bot &&
          cd ~/itsm2vk_bot/itsm2vk_bot &&
          make build
        '

    - name: Create .env file
      run: |
        touch .env
        echo '# generated with github workflow' > .env
        echo '# exchange' >> .env
        echo 'EXC_SERVER=${{ vars.EXC_SERVER }}' >> .env
        echo 'EXC_EMAIL=${{ vars.EXC_EMAIL }}' >> .env
        echo 'EXC_USER=${{ vars.EXC_USER }}' >> .env
        echo 'EXC_PASSWORD=${{ secrets.EXC_PASSWORD }}' >> .env
        echo 'EXC_INC_FOLDER="${{ vars.EXC_INC_FOLDER }}"' >> .env
        echo 'EXC_MON_FOLDER="${{ vars.EXC_MON_FOLDER }}"' >> .env

        echo '# vk teams cloud' >> .env
        echo 'VKT_BASE_URL=${{ vars.VKT_BASE_URL }}' >> .env
        echo 'VKT_BOT_TOKEN=${{ secrets.VKT_BOT_TOKEN }}' >> .env
        echo 'VKT_CHAT_ID=${{ vars.VKT_CHAT_ID }}' >> .env
        echo 'VKT_MONITORING_CHAT_ID=${{ vars.VKT_MONITORING_CHAT_ID }}' >> .env
        echo 'VKT_ADMIN_ID=${{ vars.VKT_ADMIN_ID }}' >> .env

    - name: Copy .env to server
      run: scp -o StrictHostKeyChecking=no .env ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }}:~/itsm2vk_bot/itsm2vk_bot/.env

    - name: Run bot
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.SSH_USER }}@${{ vars.SERVER_IP }} '
          cd ~/itsm2vk_bot/itsm2vk_bot &&
          make hard_restart
        '
